CREATE OR REPLACE FUNCTION notify_trigger() RETURNS TRIGGER AS $$
BEGIN
  PERFORM pg_notify('your_channel_name', '{"table": "active_worker' || TG_TABLE_NAME || '", "action": "insert"}');
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger
--CREATE TRIGGER your_table_trigger AFTER INSERT ON active_worker FOR EACH ROW EXECUTE FUNCTION notify_trigger();

-- Create trigger function for UPDATE
CREATE OR REPLACE FUNCTION notify_update_trigger() RETURNS TRIGGER AS $$
BEGIN
  PERFORM pg_notify('your_channel_name', '{"table": "active_worker' || TG_TABLE_NAME || '", "action": "update"}');
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger for UPDATE
CREATE TRIGGER your_table_update_trigger AFTER UPDATE ON active_worker FOR EACH ROW EXECUTE FUNCTION notify_update_trigger();

-- Create trigger function for DELETE
CREATE OR REPLACE FUNCTION notify_delete_trigger() RETURNS TRIGGER AS $$
BEGIN
  PERFORM pg_notify('your_channel_name', '{"table": "active_worker' || TG_TABLE_NAME || '", "action": "delete"}');
  RETURN OLD;
END;
$$ LANGUAGE plpgsql;

-- Create trigger for DELETE
CREATE TRIGGER your_table_delete_trigger AFTER DELETE ON active_worker FOR EACH ROW EXECUTE FUNCTION notify_delete_trigger();
